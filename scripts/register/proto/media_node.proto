syntax = "proto3";

package OmniFlix.medianode.v1beta1;

import "gogoproto/gogo.proto";
import "cosmos/base/v1beta1/coin.proto";

option go_package = "github.com/OmniFlix/medianode/x/medianode/types";

message MsgRegisterMediaNode {
    string id = 1;
    string url = 2;

    message HardwareSpecs {
        int64 cpus = 1;
        int64 ram_in_gb = 2;
        int64 storage_in_gb = 3;
    }

    message Info {
        string moniker = 1;
        string description = 2;
        string contact = 3;
    }

    HardwareSpecs hardware_specs = 3;
    Info info = 7;

    cosmos.base.v1beta1.Coin price_per_hour = 4;
    cosmos.base.v1beta1.Coin deposit = 5;
    string sender = 6;
}

message MsgLeaseMediaNode {
  string media_node_id             = 1;
  uint64 lease_hours               = 2;
  cosmos.base.v1beta1.Coin amount  = 3;
  string sender                    = 4;
}

message MsgLeaseMediaNodeResponse {}

message MsgDepositMediaNode {
    string id = 1;
    cosmos.base.v1beta1.Coin amount = 2;
    string sender = 3;
}

message MsgCancelLease {
  string media_node_id = 1;
  string sender = 2;
}

message MsgExtendLease {
  string media_node_id             = 1;
  uint64 lease_hours               = 2;
  cosmos.base.v1beta1.Coin amount  = 3;
  string sender                    = 4;
}

message MsgExtendLeaseResponse {}

message MsgCancelLeaseResponse {}

message MsgDepositMediaNodeResponse {}

message MsgRegisterMediaNodeResponse {}

service Msg {
    rpc RegisterMediaNode (MsgRegisterMediaNode) returns (MsgRegisterMediaNodeResponse);
    rpc DepositMediaNode (MsgDepositMediaNode) returns (MsgDepositMediaNodeResponse);
}
